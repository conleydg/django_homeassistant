[{"model": "ha_integration.field", "pk": 1, "fields": {"service": 5, "entity_id": "entity_id", "description": "The entity_id of the device to toggle on/off.", "example": "light.living_room", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 2, "fields": {"service": 6, "entity_id": "entity_id", "description": "The entity_id of the device to turn off.", "example": "light.living_room", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 3, "fields": {"service": 7, "entity_id": "entity_id", "description": "The entity_id of the device to turn on.", "example": "light.living_room", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 4, "fields": {"service": 8, "entity_id": "message", "description": "Message body of the notification. [Templates accepted]", "example": "Please check your configuration.yaml.", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 5, "fields": {"service": 8, "entity_id": "notification_id", "description": "Target ID of the notification, will replace a notification with the same Id. [Optional]", "example": "1234", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 6, "fields": {"service": 8, "entity_id": "title", "description": "Optional title for your notification. [Optional, Templates accepted]", "example": "Test notification", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 7, "fields": {"service": 9, "entity_id": "notification_id", "description": "Target ID of the notification, which should be removed. [Required]", "example": "1234", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 8, "fields": {"service": 10, "entity_id": "payload", "description": "Payload to publish.", "example": "This is great", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 9, "fields": {"service": 10, "entity_id": "payload_template", "description": "Template to render as payload value. Ignored if payload given.", "example": "{{ states('sensor.temperature') }}", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 10, "fields": {"service": 10, "entity_id": "qos", "description": "Quality of Service to use.", "example": "2", "values": "[0, 1, 2]", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 11, "fields": {"service": 10, "entity_id": "retain", "description": "If message should have the retain flag set.", "example": "True", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 12, "fields": {"service": 10, "entity_id": "topic", "description": "Topic to publish payload.", "example": "/homeassistant/hello", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 13, "fields": {"service": 11, "entity_id": "keep_days", "description": "Number of history days to keep in database after purge. Value >= 0.", "example": "2", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 14, "fields": {"service": 11, "entity_id": "repack", "description": "Attempt to save disk space by rewriting the entire database file.", "example": "True", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 15, "fields": {"service": 21, "entity_id": "entity_id", "description": "Entity id of the input boolean to toggle.", "example": "input_boolean.notify_alerts", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 16, "fields": {"service": 22, "entity_id": "entity_id", "description": "Entity id of the input boolean to turn off.", "example": "input_boolean.notify_alerts", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 17, "fields": {"service": 23, "entity_id": "entity_id", "description": "Entity id of the input boolean to turn on.", "example": "input_boolean.notify_alerts", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 18, "fields": {"service": 27, "entity_id": "data", "description": "Extended information for notification. Optional depending on the platform.", "example": "platform specific", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 19, "fields": {"service": 27, "entity_id": "message", "description": "Message body of the notification.", "example": "The garage door has been open for 10 minutes.", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 20, "fields": {"service": 27, "entity_id": "target", "description": "An array of targets to send the notification to. Optional depending on the platform.", "example": "platform specific", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 21, "fields": {"service": 27, "entity_id": "title", "description": "Optional title for your notification.", "example": "Your Garage Door Friend", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 22, "fields": {"service": 30, "entity_id": "entity_id", "description": "Name(s) of entities to disable motion detection.", "example": "camera.living_room_camera", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 23, "fields": {"service": 31, "entity_id": "entity_id", "description": "Name(s) of entities to enable motion detection.", "example": "camera.living_room_camera", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 24, "fields": {"service": 32, "entity_id": "entity_id", "description": "Name(s) of entities to update.", "example": "camera.local_file", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 25, "fields": {"service": 32, "entity_id": "file_path", "description": "Path to the new image file.", "example": "/images/newimage.jpg", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 26, "fields": {"service": 33, "entity_id": "entity_id", "description": "Name(s) of entities to create snapshots from.", "example": "camera.living_room_camera", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 27, "fields": {"service": 33, "entity_id": "filename", "description": "Template of a Filename. Variable is entity_id.", "example": "/tmp/snapshot_{{ entity_id }}", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 28, "fields": {"service": 34, "entity_id": "entity_id", "description": "Entity id.", "example": "camera.living_room", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 29, "fields": {"service": 35, "entity_id": "entity_id", "description": "Entity id.", "example": "camera.living_room", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 30, "fields": {"service": 36, "entity_id": "aux_heat", "description": "New value of axillary heater.", "example": "True", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 31, "fields": {"service": 36, "entity_id": "entity_id", "description": "Name(s) of entities to change.", "example": "climate.kitchen", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 32, "fields": {"service": 37, "entity_id": "away_mode", "description": "New value of away mode.", "example": "True", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 33, "fields": {"service": 37, "entity_id": "entity_id", "description": "Name(s) of entities to change.", "example": "climate.kitchen", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 34, "fields": {"service": 38, "entity_id": "entity_id", "description": "Name(s) of entities to change.", "example": "climate.nest", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 35, "fields": {"service": 38, "entity_id": "fan_mode", "description": "New value of fan mode.", "example": "On Low", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 36, "fields": {"service": 39, "entity_id": "entity_id", "description": "Name(s) of entities to change.", "example": "climate.kitchen", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 37, "fields": {"service": 39, "entity_id": "hold_mode", "description": "New value of hold mode", "example": "away", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 38, "fields": {"service": 40, "entity_id": "entity_id", "description": "Name(s) of entities to change.", "example": "climate.kitchen", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 39, "fields": {"service": 40, "entity_id": "humidity", "description": "New target humidity for climate device.", "example": "60", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 40, "fields": {"service": 41, "entity_id": "entity_id", "description": "Name(s) of entities to change.", "example": "climate.nest", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 41, "fields": {"service": 41, "entity_id": "operation_mode", "description": "New value of operation mode.", "example": "Heat", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 42, "fields": {"service": 42, "entity_id": "entity_id", "description": "Name(s) of entities to change.", "example": "climate.nest", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 43, "fields": {"service": 42, "entity_id": "swing_mode", "description": "New value of swing mode.", "example": "None", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 44, "fields": {"service": 43, "entity_id": "entity_id", "description": "Name(s) of entities to change.", "example": "climate.kitchen", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 45, "fields": {"service": 43, "entity_id": "operation_mode", "description": "Operation mode to set temperature to. This defaults to current_operation mode if not set, or set incorrectly.", "example": "Heat", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 46, "fields": {"service": 43, "entity_id": "target_temp_high", "description": "New target high tempereature for HVAC.", "example": "26", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 47, "fields": {"service": 43, "entity_id": "target_temp_low", "description": "New target low temperature for HVAC.", "example": "20", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 48, "fields": {"service": 43, "entity_id": "temperature", "description": "New target temperature for HVAC.", "example": "25", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 49, "fields": {"service": 44, "entity_id": "entity_id", "description": "Name(s) of entities to change.", "example": "climate.kitchen", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 50, "fields": {"service": 45, "entity_id": "entity_id", "description": "Name(s) of entities to change.", "example": "climate.kitchen", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 51, "fields": {"service": 57, "entity_id": "object_id", "description": "Group id and part of entity id.", "example": "test_group", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 52, "fields": {"service": 58, "entity_id": "add_entities", "description": "List of members they will change on group listening.", "example": "domain.entity_id1, domain.entity_id2", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 53, "fields": {"service": 58, "entity_id": "control", "description": "Value for control the group control.", "example": "hidden", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 54, "fields": {"service": 58, "entity_id": "entities", "description": "List of all members in the group. Not compatible with 'delta'.", "example": "domain.entity_id1, domain.entity_id2", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 55, "fields": {"service": 58, "entity_id": "icon", "description": "Name of icon for the group.", "example": "mdi:camera", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 56, "fields": {"service": 58, "entity_id": "name", "description": "Name of group", "example": "My test group", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 57, "fields": {"service": 58, "entity_id": "object_id", "description": "Group id and part of entity id.", "example": "test_group", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 58, "fields": {"service": 58, "entity_id": "view", "description": "Boolean for if the group is a view.", "example": "True", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 59, "fields": {"service": 58, "entity_id": "visible", "description": "If the group is visible on UI.", "example": "True", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 60, "fields": {"service": 59, "entity_id": "entity_id", "description": "Name(s) of entities to set value.", "example": "group.travel", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 61, "fields": {"service": 59, "entity_id": "visible", "description": "True if group should be shown or False if it should be hidden.", "example": "True", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 62, "fields": {"service": 71, "entity_id": "entity_id", "description": "Name of the automation to toggle on/off.", "example": "automation.notify_home", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 63, "fields": {"service": 72, "entity_id": "entity_id", "description": "Name of the automation to trigger.", "example": "automation.notify_home", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 64, "fields": {"service": 73, "entity_id": "entity_id", "description": "Name of the automation to turn off.", "example": "automation.notify_home", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 65, "fields": {"service": 74, "entity_id": "entity_id", "description": "Name of the automation to turn on.", "example": "automation.notify_home", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 66, "fields": {"service": 75, "entity_id": "code", "description": "An optional code to arm away the alarm control panel with.", "example": "1234", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 67, "fields": {"service": 75, "entity_id": "entity_id", "description": "Name of alarm control panel to arm away.", "example": "alarm_control_panel.downstairs", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 68, "fields": {"service": 77, "entity_id": "code", "description": "An optional code to arm home the alarm control panel with.", "example": "1234", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 69, "fields": {"service": 77, "entity_id": "entity_id", "description": "Name of alarm control panel to arm home.", "example": "alarm_control_panel.downstairs", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 70, "fields": {"service": 78, "entity_id": "code", "description": "An optional code to arm night the alarm control panel with.", "example": "1234", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 71, "fields": {"service": 78, "entity_id": "entity_id", "description": "Name of alarm control panel to arm night.", "example": "alarm_control_panel.downstairs", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 72, "fields": {"service": 79, "entity_id": "code", "description": "An optional code to disarm the alarm control panel with.", "example": "1234", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 73, "fields": {"service": 79, "entity_id": "entity_id", "description": "Name of alarm control panel to disarm.", "example": "alarm_control_panel.downstairs", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 74, "fields": {"service": 80, "entity_id": "code", "description": "An optional code to trigger the alarm control panel with.", "example": "1234", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 75, "fields": {"service": 80, "entity_id": "entity_id", "description": "Name of alarm control panel to trigger.", "example": "alarm_control_panel.downstairs", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 76, "fields": {"service": 81, "entity_id": "entity_id", "description": "Name of the alarm control panel to trigger.", "example": "alarm_control_panel.downstairs", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 77, "fields": {"service": 81, "entity_id": "keypress", "description": "String to send to the alarm panel (1-6 characters).", "example": "*71", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 78, "fields": {"service": 82, "entity_id": "entity_id", "description": "Name(s) of entities to change source on.", "example": "media_player.living_room_chromecast", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 79, "fields": {"service": 83, "entity_id": "entity_id", "description": "Name(s) of entities to send next track command to.", "example": "media_player.living_room_sonos", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 80, "fields": {"service": 84, "entity_id": "entity_id", "description": "Name(s) of entities to pause on.", "example": "media_player.living_room_sonos", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 81, "fields": {"service": 85, "entity_id": "entity_id", "description": "Name(s) of entities to play on.", "example": "media_player.living_room_sonos", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 82, "fields": {"service": 86, "entity_id": "entity_id", "description": "Name(s) of entities to toggle play/pause state on.", "example": "media_player.living_room_sonos", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 83, "fields": {"service": 87, "entity_id": "entity_id", "description": "Name(s) of entities to send previous track command to.", "example": "media_player.living_room_sonos", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 84, "fields": {"service": 88, "entity_id": "entity_id", "description": "Name(s) of entities to seek media on.", "example": "media_player.living_room_chromecast", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 85, "fields": {"service": 88, "entity_id": "seek_position", "description": "Position to seek to. The format is platform dependent.", "example": "100", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 86, "fields": {"service": 89, "entity_id": "entity_id", "description": "Name(s) of entities to stop on.", "example": "media_player.living_room_sonos", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 87, "fields": {"service": 90, "entity_id": "entity_id", "description": "Name(s) of entities to seek media on", "example": "media_player.living_room_chromecast", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 88, "fields": {"service": 90, "entity_id": "media_content_id", "description": "The ID of the content to play. Platform dependent.", "example": "https://home-assistant.io/images/cast/splash.png", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 89, "fields": {"service": 90, "entity_id": "media_content_type", "description": "The type of the content to play. Must be one of music, tvshow, video, episode, channel or playlist", "example": "music", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 90, "fields": {"service": 91, "entity_id": "entity_id", "description": "Name(s) of entities to change sound mode on.", "example": "media_player.marantz", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 91, "fields": {"service": 91, "entity_id": "sound_mode", "description": "Name of the sound mode to switch to.", "example": "Music", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 92, "fields": {"service": 92, "entity_id": "entity_id", "description": "Name(s) of entities to change source on.", "example": "media_player.media_player.txnr535_0009b0d81f82", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 93, "fields": {"service": 92, "entity_id": "source", "description": "Name of the source to switch to. Platform dependent.", "example": "video1", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 94, "fields": {"service": 93, "entity_id": "entity_id", "description": "Name(s) of entities to set.", "example": "media_player.spotify", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 95, "fields": {"service": 93, "entity_id": "shuffle", "description": "True/false for enabling/disabling shuffle.", "example": "True", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 96, "fields": {"service": 94, "entity_id": "entity_id", "description": "Name(s) of entities to toggle.", "example": "media_player.living_room_chromecast", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 97, "fields": {"service": 95, "entity_id": "entity_id", "description": "Name(s) of entities to turn off.", "example": "media_player.living_room_chromecast", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 98, "fields": {"service": 96, "entity_id": "entity_id", "description": "Name(s) of entities to turn on.", "example": "media_player.living_room_chromecast", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 99, "fields": {"service": 97, "entity_id": "entity_id", "description": "Name(s) of entities to turn volume down on.", "example": "media_player.living_room_sonos", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 100, "fields": {"service": 98, "entity_id": "entity_id", "description": "Name(s) of entities to mute.", "example": "media_player.living_room_sonos", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 101, "fields": {"service": 98, "entity_id": "is_volume_muted", "description": "True/false for mute/unmute.", "example": "True", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 102, "fields": {"service": 99, "entity_id": "entity_id", "description": "Name(s) of entities to set volume level on.", "example": "media_player.living_room_sonos", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 103, "fields": {"service": 99, "entity_id": "volume_level", "description": "Volume level to set as float.", "example": "0.6", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 104, "fields": {"service": 100, "entity_id": "entity_id", "description": "Name(s) of entities to turn volume up on.", "example": "media_player.living_room_sonos", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 105, "fields": {"service": 101, "entity_id": "entity_id", "description": "Name(s) of entities to toggle.", "example": "switch.living_room", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 106, "fields": {"service": 102, "entity_id": "entity_id", "description": "Name(s) of entities to turn off.", "example": "switch.living_room", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 107, "fields": {"service": 103, "entity_id": "entity_id", "description": "Name(s) of entities to turn on", "example": "switch.living_room", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 108, "fields": {"service": 104, "entity_id": "battery", "description": "Battery level of device.", "example": "100", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 109, "fields": {"service": 104, "entity_id": "dev_id", "description": "Id of device (find id in known_devices.yaml).", "example": "phonedave", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 110, "fields": {"service": 104, "entity_id": "gps", "description": "GPS coordinates where device is located (latitude, longitude).", "example": "[51.509802, -0.086692]", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 111, "fields": {"service": 104, "entity_id": "gps_accuracy", "description": "Accuracy of GPS coordinates.", "example": "80", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 112, "fields": {"service": 104, "entity_id": "host_name", "description": "Hostname of device", "example": "Dave", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 113, "fields": {"service": 104, "entity_id": "location_name", "description": "Name of location where device is located (not_home is away).", "example": "home", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 114, "fields": {"service": 104, "entity_id": "mac", "description": "MAC address of device", "example": "FF:FF:FF:FF:FF:FF", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 115, "fields": {"service": 107, "entity_id": "entity_id", "description": "Name(s) of entities to toggle.", "example": "light.kitchen", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 116, "fields": {"service": 107, "entity_id": "transition", "description": "Duration in seconds it takes to get to next state.", "example": "60", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 117, "fields": {"service": 108, "entity_id": "entity_id", "description": "Name(s) of entities to turn off.", "example": "light.kitchen", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 118, "fields": {"service": 108, "entity_id": "flash", "description": "If the light should flash.", "example": "", "values": "['short', 'long']", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 119, "fields": {"service": 108, "entity_id": "transition", "description": "Duration in seconds it takes to get to next state.", "example": "60", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 120, "fields": {"service": 109, "entity_id": "brightness", "description": "Number between 0..255 indicating brightness.", "example": "120", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 121, "fields": {"service": 109, "entity_id": "brightness_pct", "description": "Number between 0..100 indicating percentage of full brightness.", "example": "47", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 122, "fields": {"service": 109, "entity_id": "color_name", "description": "A human readable color name.", "example": "red", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 123, "fields": {"service": 109, "entity_id": "color_temp", "description": "Color temperature for the light in mireds.", "example": "250", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 124, "fields": {"service": 109, "entity_id": "effect", "description": "Light effect.", "example": "", "values": "['colorloop', 'random']", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 125, "fields": {"service": 109, "entity_id": "entity_id", "description": "Name(s) of entities to turn on", "example": "light.kitchen", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 126, "fields": {"service": 109, "entity_id": "flash", "description": "If the light should flash.", "example": "", "values": "['short', 'long']", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 127, "fields": {"service": 109, "entity_id": "hs_color", "description": "Color for the light in hue/sat format. Hue is 0-360 and Sat is 0-100.", "example": "[300, 70]", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 128, "fields": {"service": 109, "entity_id": "kelvin", "description": "Color temperature for the light in Kelvin.", "example": "4000", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 129, "fields": {"service": 109, "entity_id": "profile", "description": "Name of a light profile to use.", "example": "relax", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 130, "fields": {"service": 109, "entity_id": "rgb_color", "description": "Color for the light in RGB-format.", "example": "[255, 100, 100]", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 131, "fields": {"service": 109, "entity_id": "transition", "description": "Duration in seconds it takes to get to next state", "example": "60", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 132, "fields": {"service": 109, "entity_id": "white_value", "description": "Number between 0..255 indicating level of white.", "example": "250", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 133, "fields": {"service": 109, "entity_id": "xy_color", "description": "Color for the light in XY-format.", "example": "[0.52, 0.43]", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 134, "fields": {"service": 110, "entity_id": "code_slot", "description": "Code slot to clear code from.", "example": "1", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 135, "fields": {"service": 110, "entity_id": "node_id", "description": "Node id of the lock.", "example": "18", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 136, "fields": {"service": 111, "entity_id": "code_slot", "description": "Code slot to retrieve a code from.", "example": "1", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 137, "fields": {"service": 111, "entity_id": "node_id", "description": "Node id of the lock.", "example": "18", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 138, "fields": {"service": 112, "entity_id": "code", "description": "An optional code to lock the lock with.", "example": "1234", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 139, "fields": {"service": 112, "entity_id": "entity_id", "description": "Name of lock to lock.", "example": "lock.front_door", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 140, "fields": {"service": 114, "entity_id": "code_slot", "description": "Code slot to set the code.", "example": "1", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 141, "fields": {"service": 114, "entity_id": "node_id", "description": "Node id of the lock.", "example": "18", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 142, "fields": {"service": 114, "entity_id": "usercode", "description": "Code to set.", "example": "1234", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 143, "fields": {"service": 115, "entity_id": "code", "description": "An optional code to unlock the lock with.", "example": "1234", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 144, "fields": {"service": 115, "entity_id": "entity_id", "description": "Name of lock to unlock.", "example": "lock.front_door", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 145, "fields": {"service": 119, "entity_id": "association", "description": "Specify add or remove association", "example": "add", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 146, "fields": {"service": 119, "entity_id": "group", "description": "Group number to set association for.", "example": "", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 147, "fields": {"service": 119, "entity_id": "instance", "description": "(Optional) Instance of multichannel association. Defaults to 0.", "example": "", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 148, "fields": {"service": 119, "entity_id": "node_id", "description": "Node id of the node to set association for.", "example": "10", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 149, "fields": {"service": 119, "entity_id": "target_node_id", "description": "Node id of the node to associate to.", "example": "42", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 150, "fields": {"service": 120, "entity_id": "description", "description": "Whether or not to update the return routes from the nodes to the controller. Defaults to False.", "example": "", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 151, "fields": {"service": 120, "entity_id": "example", "description": "True", "example": "", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 152, "fields": {"service": 120, "entity_id": "return_routes", "description": "None", "example": "", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 153, "fields": {"service": 121, "entity_id": "description", "description": "Whether or not to update the return routes from the node to the controller. Defaults to False.", "example": "", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 154, "fields": {"service": 121, "entity_id": "example", "description": "True", "example": "", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 155, "fields": {"service": 121, "entity_id": "return_routes", "description": "None", "example": "", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 156, "fields": {"service": 122, "entity_id": "node_id", "description": "Node id of the device to print the parameter from (integer).", "example": "", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 157, "fields": {"service": 122, "entity_id": "parameter", "description": "Parameter number to print (integer).", "example": "", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 158, "fields": {"service": 123, "entity_id": "node_id", "description": "Node id of the device to print.", "example": "", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 159, "fields": {"service": 124, "entity_id": "entity_id", "description": "Name of the entity to refresh.", "example": "light.leviton_vrmx11lz_multilevel_scene_switch_level_40", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 160, "fields": {"service": 125, "entity_id": "node_id", "description": "ID of the node to refresh.", "example": "10", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 161, "fields": {"service": 126, "entity_id": "node_id", "description": "Node id of the device to remove (integer).", "example": "10", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 162, "fields": {"service": 128, "entity_id": "name", "description": "New Name", "example": "kitchen", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 163, "fields": {"service": 128, "entity_id": "node_id", "description": "ID of the node to rename.", "example": "10", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 164, "fields": {"service": 129, "entity_id": "name", "description": "New Name", "example": "Luminosity", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 165, "fields": {"service": 129, "entity_id": "node_id", "description": "ID of the node to rename.", "example": "10", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 166, "fields": {"service": 129, "entity_id": "value_id", "description": "ID of the value to rename.", "example": "72037594255792737", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 167, "fields": {"service": 130, "entity_id": "node_id", "description": "Node id of the device to replace (integer).", "example": "10", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 168, "fields": {"service": 131, "entity_id": "instance", "description": "(Optional) Instance of association. Defaults to instance 1.", "example": "", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 169, "fields": {"service": 131, "entity_id": "node_id", "description": "Node id of the device to reset meters for. (integer)", "example": "", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 170, "fields": {"service": 132, "entity_id": "node_id", "description": "Node id of the device to set config parameter to (integer).", "example": "", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 171, "fields": {"service": 132, "entity_id": "parameter", "description": "Parameter number to set (integer).", "example": "", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 172, "fields": {"service": 132, "entity_id": "size", "description": "(Optional) Set the size of the parameter value. Only needed if no parameters are available.", "example": "", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 173, "fields": {"service": 132, "entity_id": "value", "description": "Value to set for parameter. (String value for list and bool parameters, integer for others).", "example": "", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 174, "fields": {"service": 133, "entity_id": "node_id", "description": "ID of the node to set polling to.", "example": "10", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 175, "fields": {"service": 133, "entity_id": "poll_intensity", "description": "The intensity to poll, 0 = disabled, 1 = Every time through list, 2 = Every second time through list...", "example": "2", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 176, "fields": {"service": 133, "entity_id": "value_id", "description": "ID of the value to set polling to.", "example": "72037594255792737", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 177, "fields": {"service": 134, "entity_id": "node_id", "description": "Node id of the device to set the wake-up interval for. (integer)", "example": "", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 178, "fields": {"service": 134, "entity_id": "value", "description": "Value of the interval to set. (integer)", "example": "", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 179, "fields": {"service": 139, "entity_id": "messages", "description": "Optional. Amount of test messages to send.", "example": "3", "values": "", "return_routes": ""}}, {"model": "ha_integration.field", "pk": 180, "fields": {"service": 139, "entity_id": "node_id", "description": "ID of the node to send test messages to.", "example": "10", "values": "", "return_routes": ""}}]